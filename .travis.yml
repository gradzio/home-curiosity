dist: trusty
sudo: false

language: node_js
node_js:
  - "8"
  
services:
  - docker

addons:
  apt:
    sources:
      - google-chrome
    packages:
      - google-chrome-stable

cache:
  directories:
     - ./curiosidade-domiciliar/node_modules
     - $HOME/google-cloud-sdk

before_install:
  - cd curiosidade-domiciliar

stages:
  - test
  - build
  - acceptance

jobs:
  include:
#    - stage: test
#      install: npm install
#      script:
#        - npm run lint
#        - npm run test-headless
#        - bash <(curl -s https://codecov.io/bash)
#    - stage: build
#      install: npm install --production
#      script:
#        - npm run build:prod
#        - docker build -t $DOCKER_USERNAME/$DOCKER_REPO:$TRAVIS_PULL_REQUEST_SHA .
#        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#        - docker push $DOCKER_USERNAME/$DOCKER_REPO:$TRAVIS_PULL_REQUEST_SHA
#    - stage: acceptance
#      install: npm install -g cypress
#      script:
#        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#        - docker pull $DOCKER_USERNAME/$DOCKER_REPO:$TRAVIS_PULL_REQUEST_SHA
#        - docker run -d -p 80:80 $DOCKER_USERNAME/$DOCKER_REPO:$TRAVIS_PULL_REQUEST_SHA
#        - cypress run --record --key $CYPRESS_KEY --env host=localhost
    - stage: deploy
      install:
        - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; curl https://sdk.cloud.google.com | bash > /dev/null; fi
        # Add gcloud to $PATH
        - source /home/travis/google-cloud-sdk/path.bash.inc
        - gcloud version
        - gcloud --quiet components update kubectl
        - gcloud config set project healthy-spark-241818
        # Auth flowf
        - echo $GCLOUD_KEY | base64 --decode > gcloud.p12
        - cat gcloud.p12
        - gcloud auth activate-service-account $GCLOUD_EMAIL --key-file gcloud.p12
        - ssh-keygen -f ~/.ssh/google_compute_engine -N ""
        # Push to Google container registry
#        - docker build -t gcr.io/$CLOUDSDK_CORE_PROJECT/$CLOUDSDK_CORE_PROJECT:v1 .
#        - gcloud docker push gcr.io/$CLOUDSDK_CORE_PROJECT/$CLOUDSDK_CORE_PROJECT:v1 > /dev/null
        - gcloud container clusters list
        - gcloud container clusters get-credentials $CLOUDSDK_CORE_PROJECT
        - kubectl create secret docker-registry docker-auth --docker-server=DOCKER_SERVER --docker-username=$DOCKER_USERNAME --docker-password=$DOCKER_PASSWORD --docker-email=DOCKER_EMAIL
      script:
        - kubectl apply -f deployment.yml
